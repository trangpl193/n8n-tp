---
description: "USE WHEN implementing strangematic.com automation hub, configuring Cloudflare Tunnel, or deploying Windows headless workflows"
globs: ["**/strangematic*", "**/cloudflare*", "**/tunnel*", "**/webhook*", "**/automation*", "docs/analysis/**/*", "**/setup*", "**/deploy*"]
alwaysApply: false
---

# Strangematic.com Automation Hub Deployment Rules

## üéØ DEPLOYMENT OVERVIEW - Production Ready

### **Domain Configuration - strangematic.com**
```yaml
Primary Domain: strangematic.com
Registrar: Cloudflare Registrar ($10/year)
DNS Management: Cloudflare
SSL/TLS: Full Strict mode (A+ grade)
Security: Enterprise-grade DDoS protection + WAF
```

### **Subdomain Architecture**
```yaml
app.strangematic.com:     # Main n8n interface (localhost:5678)
  purpose: Primary automation dashboard
  target: Windows Dell OptiPlex 3060
  auth: n8n user management
  
api.strangematic.com:     # Webhook endpoints  
  purpose: Bot integration endpoints
  routes: 
    - /webhook/telegram
    - /webhook/discord
    - /webhook/openai
    - /webhook/figma
    
status.strangematic.com:  # System monitoring
  purpose: Health checks v√† uptime monitoring
  target: localhost:8080
  metrics: CPU, RAM, disk, tunnel health
  
docs.strangematic.com:    # API documentation
  purpose: Workflow documentation v√† API guides
  content: Integration guides, troubleshooting
```

## üöá CLOUDFLARE TUNNEL CONFIGURATION

### **Tunnel Setup - automation-hub-prod**
```yaml
tunnel_name: automation-hub-prod
config_path: C:\cloudflared\config.yml
credentials: C:\cloudflared\cert.pem
service: Windows Service (auto-start)

ingress_rules:
  - hostname: app.strangematic.com
    service: http://localhost:5678
    
  - hostname: api.strangematic.com  
    service: http://localhost:5678
    originRequest:
      httpHostHeader: api.strangematic.com
      
  - hostname: status.strangematic.com
    service: http://localhost:8080
    
  - service: http_status:404
```

### **DNS Records Configuration**
```dns
# Primary Records
Type    Name                    Content                 Proxy
A       strangematic.com        100.100.100.100        Yes
CNAME   app                     strangematic.com        Yes  
CNAME   api                     strangematic.com        Yes
CNAME   status                  strangematic.com        Yes
CNAME   www                     strangematic.com        Yes

# Security & Performance
TXT     strangematic.com        "v=spf1 -all"
TXT     _dmarc                  "v=DMARC1; p=reject"
CAA     strangematic.com        "0 issue \"letsencrypt.org\""
```

## ü§ñ AUTOMATION WORKFLOW ENDPOINTS

### **Webhook URL Structure**
```yaml
Telegram Bot:
  webhook_url: https://api.strangematic.com/webhook/telegram
  commands:
    - /create: Design automation workflows
    - /project: Project management updates
    - /status: System health checks
    
Discord Bot:
  webhook_url: https://api.strangematic.com/webhook/discord
  slash_commands:
    - /write: Content generation workflows
    - /design: Figma integration workflows
    - /export: Asset management workflows

AI Agents:
  webhook_url: https://api.strangematic.com/webhook/openai
  integration: GPT-4 API cho advanced automation
  use_cases: Design briefs, content generation, analysis

External APIs:
  webhook_url: https://api.strangematic.com/webhook/external
  integrations: Google Workspace, Figma, social media
```

### **Workflow Response Formats**
```json
{
  "success": true,
  "workflow_id": "design_automation_001",
  "execution_time": "45s",
  "results": {
    "figma_project": "https://figma.com/file/xxx",
    "assets_folder": "https://drive.google.com/xxx",
    "preview_images": ["image1.png", "image2.png"],
    "status": "completed"
  },
  "next_actions": [
    "Review designs in Figma",
    "Download assets from Drive",
    "Schedule client presentation"
  ]
}
```

## üñ•Ô∏è WINDOWS HEADLESS CONFIGURATION

### **System Services Setup**
```powershell
# Cloudflared Service
cloudflared service install --config C:\cloudflared\config.yml
sc config cloudflared start= auto

# n8n Service (PM2)
npm install -g pm2-windows-service
pm2-service-install
pm2 start ecosystem.config.js --name strangematic-hub
pm2 startup
pm2 save

# PostgreSQL Service
sc config postgresql-x64-14 start= auto
```

### **Environment Variables - Production**
```bash
# Domain Configuration
DOMAIN_NAME=strangematic.com
N8N_EDITOR_BASE_URL=https://app.strangematic.com
WEBHOOK_URL=https://api.strangematic.com

# Database Configuration
DB_TYPE=postgresdb
DB_POSTGRESDB_HOST=localhost
DB_POSTGRESDB_PORT=5432
DB_POSTGRESDB_DATABASE=strangematic_n8n
DB_POSTGRESDB_USER=strangematic_user

# Security Configuration
N8N_SECURE_COOKIE=true
N8N_PROTOCOL=https
N8N_HOST=app.strangematic.com

# API Integration
OPENAI_API_KEY=sk-xxx
FIGMA_ACCESS_TOKEN=figd-xxx
GOOGLE_CLIENT_ID=xxx.googleusercontent.com
TELEGRAM_BOT_TOKEN=xxx:xxx
DISCORD_BOT_TOKEN=xxx
```

## üìä MONITORING & HEALTH CHECKS

### **System Health Endpoints**
```yaml
Primary Health Check:
  url: https://status.strangematic.com/health
  response: {"status": "healthy", "uptime": "99.8%"}
  
Tunnel Health:
  url: https://status.strangematic.com/tunnel
  response: {"tunnel": "connected", "latency": "15ms"}
  
Database Health:
  url: https://status.strangematic.com/database
  response: {"db": "connected", "connections": 12}
  
Workflow Health:
  url: https://status.strangematic.com/workflows
  response: {"active": 15, "queued": 3, "failed": 0}
```

### **Performance Metrics**
```yaml
Response Times:
  Webhook Processing: <200ms target
  AI API Calls: 2-5 seconds (OpenAI dependent)
  Figma Operations: 1-3 seconds
  Database Queries: <50ms target

Resource Usage:
  CPU: 60-80% sustained usage
  Memory: 8-12GB active usage
  Storage: <5GB growth monthly
  Network: <100GB monthly bandwidth

Uptime Targets:
  System Uptime: >99.5% monthly
  Tunnel Uptime: >99.9% monthly  
  Workflow Success: >95% completion rate
```

## üîí SECURITY CONFIGURATION

### **Cloudflare Security Settings**
```yaml
DDoS Protection: Automatic (enterprise-grade)
Bot Management: 
  - Challenge suspicious traffic
  - Allow verified automation tools
  
Rate Limiting:
  - 100 requests/minute per IP
  - 1000 requests/hour per API key
  
WAF Rules:
  - OWASP Top 10 protection
  - Custom rules cho webhook endpoints
  - SQL injection prevention
  - XSS protection enabled

SSL/TLS:
  - Full Strict mode
  - HSTS enabled
  - TLS 1.3 minimum
  - OCSP stapling enabled
```

### **Application Security**
```yaml
Authentication:
  - OAuth2 integration (Google/Microsoft)
  - API key management
  - Session timeout: 8 hours
  
Authorization:
  - Role-based access control
  - Webhook endpoint protection
  - Database user permissions
  
Data Protection:
  - Encryption at rest (AES-256)
  - Encryption in transit (TLS 1.3)
  - Regular backup encryption
  - API key rotation schedule
```

## üöÄ DEPLOYMENT CHECKLIST

### **Phase 1: Foundation (Week 1-2)**
```yaml
‚úÖ Domain Configuration:
  - strangematic.com registered via Cloudflare
  - DNS records configured
  - SSL certificates active
  
‚úÖ Tunnel Setup:
  - cloudflared installed on Windows
  - Tunnel authenticated v√† active
  - Ingress rules configured
  - Service auto-start enabled

‚úÖ System Preparation:
  - Windows optimized cho headless operation
  - UltraVNC configured cho remote access
  - PostgreSQL installed v√† configured
  - n8n source code deployed
```

### **Phase 2: Integration (Week 3-4)**
```yaml
‚úÖ Bot Integration:
  - Telegram bot created v√† configured
  - Discord application setup
  - Webhook endpoints tested
  - Command responses verified

‚úÖ API Configuration:
  - OpenAI API integrated
  - Figma API connected
  - Google Workspace configured
  - Error handling implemented
```

### **Phase 3: Production (Week 5-8)**
```yaml
‚úÖ Workflow Deployment:
  - Design automation workflows
  - Content generation workflows
  - Project management workflows
  - Monitoring v√† alerting

‚úÖ Go-Live:
  - Performance testing completed
  - Security validation passed
  - Documentation finalized
  - Training materials ready
```

## üí° TROUBLESHOOTING GUIDE

### **Common Issues & Solutions**
```yaml
Tunnel Connection Issues:
  - Check cloudflared service status
  - Verify internet connectivity
  - Restart tunnel service
  - Check Cloudflare dashboard

Webhook Failures:
  - Verify endpoint URLs
  - Check bot token validity
  - Test webhook manually
  - Review n8n error logs

Performance Issues:
  - Monitor CPU/RAM usage
  - Check database connections
  - Optimize workflow complexity
  - Review error rates

DNS/Domain Issues:
  - Verify DNS propagation
  - Check Cloudflare proxy status
  - Test from multiple locations
  - Review SSL certificate status
```

### **Emergency Procedures**
```yaml
Service Recovery:
  1. Check system health endpoints
  2. Restart critical services
  3. Verify tunnel connectivity
  4. Test webhook endpoints
  5. Monitor performance metrics

Backup Procedures:
  1. Database backup every 6 hours
  2. Configuration backup daily
  3. Workflow export weekly
  4. Full system backup monthly

Contact & Support:
  - Cloudflare support cho tunnel issues
  - Domain registrar cho DNS issues
  - Internal documentation cho workflows
  - Performance monitoring alerts
```

---

*Deployment rule designed cho strangematic.com automation hub v·ªõi enterprise-grade reliability v√† security standards*